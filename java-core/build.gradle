/*
 * ** Notice of Modification **
 *
 * This file has been altered from its original version by the Cryptomator team.
 * For a detailed history of modifications, please refer to the version control log.
 *
 * The original file can be found at https://github.com/pCloud/pcloud-sdk-java
 *
 * --
 *
 * https://cryptomator.org/
 */

apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'

sourceCompatibility = rootProject.ext.sourceCompatibilityVersion
targetCompatibility = rootProject.ext.targetCompatibilityVersion

repositories {
    mavenCentral()
}

dependencies {
    testImplementation dep.junit
    testImplementation dep.mockito
    testImplementation dep.hamcrestMatchers

    api dep.okhttp3
    implementation dep.gson
}

sourceSets {
    main {
        java.srcDir "${buildDir}/generated/src/main/java/"
    }
}

import org.apache.tools.ant.filters.ReplaceTokens
import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

def generateSources = tasks.register("generateSources", Copy) {
    from 'src/main/java-templates'
    into layout.buildDirectory.dir('generated/src/main/java')
    filter(ReplaceTokens, tokens: [version: project.version])
}

compileJava.dependsOn(generateSources)

sourceSets.main.java.srcDirs += file('build/generated/src/main/java')

ext {
    artifactId = 'java-core'
}

apply from: '../maven-publish.gradle'

def sourcesJarTask = tasks.findByName('sourcesJar')
if (sourcesJarTask != null) {
    sourcesJarTask.dependsOn(generateSources)
}
tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
		jvmTarget.set(JvmTarget.JVM_17)
	}
}
tasks.named("compileKotlin") {
	dependsOn(tasks.named("generateSources"))
}
